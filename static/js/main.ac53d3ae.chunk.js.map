{"version":3,"sources":["project-images/unnamed.jpg","project-images/pictionary.gif","project-images/cloak-n-dogger-thumbnail.jpg","project-images/pictionary-thumbnail.jpg","navbar.js","footer.js","about.js","contact.js","projects.js","welcome-page.js","project1.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","id","className","to","Footer","rel","href","About","src","photo","alt","width","Contact","type","rows","cols","Projects","project2","project1","Welcome","Project1","Photo","Routes","exact","path","component","Component","withRouter","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac53d3ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unnamed.58d256c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pictionary.36e51039.gif\";","module.exports = __webpack_public_path__ + \"static/media/cloak-n-dogger-thumbnail.6b0f478a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pictionary-thumbnail.6aefc040.jpg\";","import React from 'react';\n// import { Link } from 'react-router-dom'\nimport { HashLink as Link } from 'react-router-hash-link';\n\nimport './navbar.css';\n\nconst Navbar = () => {\n    return (\n        <div id = \"header\">\n            <div className=\"navBar\" id = \"myHeader\">\n                <div className=\"topNav\">\n                    <Link to=\"/website/#welcome-page\">Home</Link> • \n                    <Link to=\"/website/#projects\">Portfolio</Link> • \n                    <Link to=\"/website/#contact-me\">Contact</Link> • \n                    <Link to='/about'>About</Link>\n\n                </div>\n\n                {/* For responsive web page */}\n                {/* <div className = \"dropNav\">\n                    <button type=\"button\" id=\"dropbtn\">Menu</button>\n                    <div className=\"dropdown-content\">\n                        <a href=\"#\">Portfolio</a>\n                        <a href=\"#\">Contact</a>\n                        <a href=\"#\">About</a>\n                    </div>\n                </div> */}\n\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './footer.css';\n\nconst Footer = () => {\n    return (\n        <div className = 'footer'> \n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n            \n            <a href=\"https://www.linkedin.com/in/athena-chen-2264b393/\" className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></a>\n            <a href=\"https://github.com/ath-chen\" className=\"github\"><i className=\"fa fa-github\"></i></a>\n            <a href=\"google.com\" className=\"google\"><i className=\"fa fa-google\"></i></a>\n        \n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport './about.css'\nimport photo from './project-images/unnamed.jpg'\n\nconst About = () => {\n    return (\n        <div>\n            <div id=\"about\">\n                <div className=\"skills\">\n                    <img src={photo} alt='' width='80%'></img>\n                    \n                </div>\n                <div className='summary'>\n                    <h2>Hi, I'm Athena.</h2>\n                    <br/>\n                    An accountant turned software engineer with a passion for building full stack applications and beautiful UI/UX experiences. \n                    <p/>\n                    A nature girl at heart, you can (probably always) catch me hiking some random trail. To the left is a photo of me climbing down from Mount Batur after viewing the most stunning sunrise. \n                    <p />\n                    If you are interested in working together, let's connect! You can reach me via e-mail or via LinkedIn.\n\n                    {/* SKILLS: <p />\n                    JavaScript <br />\n                    HTML & CSS <br />\n                    Node.js <br />\n                    Express.js <br />\n                    React / Redux <br />\n                    Sequelize / SQL <br /> */}\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n\n","import React from 'react';\n\nimport './contact.css'\n\nconst Contact = () => {\n    return (\n        <div id = \"contact-me\">\n            <div className = \"contactText\">\n                <h1> Hello! / 你好 </h1>\n                <p> Have any questions or just want to say \"hi?\" </p>\n                <p>Drop me a line! I'll love to hear your thoughts. </p>\n                <img alt='' src=\"https://www.nicepng.com/png/full/366-3662305_free-png-white-paper-planplane-png-images-transparent.png\"/>\n            </div>\n\n            <div className = \"contactBox\">\n                <div className = \"name\">\n                    <p /> Name * \n                    <p /> <input id=\"nameBox\" type=\"text\" />\n                    <p /> Email *\n                    <p /> <input id=\"emailBox\" type=\"text\" />\n                    <p /> Message * \n                    <p /> <textarea id='messageBox' rows=\"4\" cols=\"50\" />\n                </div>\n                <button type=\"button\" id=\"sendMail\"> SEND </button>\n            </div>\n        </div>\n    )\n};\n\nexport default Contact;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Contact from './contact';\n\nimport './projects.css'\n\nimport project1 from './project-images/pictionary.gif';\nimport project2 from './project-images/cloak-n-dogger-thumbnail.jpg';\n\nconst Projects = () => {\n    return (\n        <div>\n            <div id=\"projects\">\n                <div className = \"project-title\"> Things I've Built </div>\n\n                <div className = \"first-row-project\">\n                    <a href = \"project2\">\n                        <div className = \"first-project-left\">\n                            <img src={project2} alt='' />\n                        </div>\n                    </a>\n                    {/* <a href = \"project1\"> */}\n                    <Link to='/project1'>\n                        <div className = \"first-project-right\">\n                            <img src ={project1} alt=''/>\n                        </div>\n                    </Link>\n                    {/* </a> */}\n                </div>\n            </div>\n\n            <Contact />\n            \n        </div>\n    );\n};\n\nexport default Projects;\n\n","import React from 'react';\nimport Projects from './projects';\n\nimport './welcome-page.css'\n\nconst Welcome = () => {\n    return (\n        <div>\n            <div id = \"welcome-page\">\n                <div id = \"welcome-page-container\">\n                    <div className=\"welcomeHeader\">\n                        <div className = \"top\">\n                            <ul>\n                            <div className =\"typeWrite\">hi, I'm Athena</div>\n                            </ul>\n                        </div>\n                        <div className = \"bottom\">\n                            <ul>\n                                {/* <div className =\"typeWrite\">  &  I like to code </div> */}\n                                <div className = \"exploreButton\"> \n                                    <a href=\"#projects\">Explore</a>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Projects />\n            \n        </div>\n    );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport './project1.css'\n\nimport Photo from './project-images/pictionary-thumbnail.jpg'\n\nconst Project1 = () => {\n    return (\n        <div className=\"project-page\">\n            <h2>pictionary</h2>\n            <br/>\n            \n            <p>I have always been drawn to learning new phrases in different languages, which inspired me to build this project. During a four day hackathon, I built a web based application that recognizes objects through the use of Vision AI and translates the English word to your desired language. </p>\n\n            <img src={Photo} alt='' width='100%'></img>\n            <br/>\n            \n            <div className='page-bottom'>\n                <div className='page-bottom-left'>\n                    November 2019 <br />\n                    <a href=\"https://github.com/ath-chen/pictionary\">View on Github</a>\n                </div>\n                <p />\n                SKILLS: <br/>\n                React & Redux | Express & Multer | Sequelize & PostgreSQL | Google Cloud Vision API | Google Text Translation API \n            </div>\n\n        </div>\n    );\n};\n\nexport default Project1;\n\n","import React, {Component} from 'react'\nimport {withRouter, Route, Switch} from 'react-router-dom'\n\nimport About from './about';\nimport Welcome from './welcome-page';\nimport Projects from './projects';\nimport Contact from './contact';\nimport Project1 from './project1'\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/website' component={Welcome}></Route>\n        <Route path='/website/#welcome-page' component={Welcome}></Route>\n        <Route path='/website/#projects' component={Projects}></Route>\n        <Route path='/website/#contact-me' component={Contact}></Route>\n        <Route path='/about' component={About}></Route>\n\n        <Route path='/project1' component={Project1}></Route>\n      </Switch>\n    )\n  }\n}\n\n// The withRouter wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(Routes)\n","import React from 'react';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport Routes from './routes'\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <Navbar />\n            <Routes />\n            <Footer />\n        </header>\n      </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}